import numpy as np
from scipy import misc
from PIL import Image

import matplotlib.pyplot as plt # import



# Load image
image = misc.imread('data_dir/images/satImage_004.png')

def average(pixel):
    return (pixel[0]* 299. / 1000 + pixel[1]* 587. / 1000 + pixel[2]* 114. / 1000)

grey = np.zeros((image.shape[0], image.shape[1])) # init 2D numpy array
for rownum in range(len(image)):
   for colnum in range(len(image[rownum])):
      grey[rownum][colnum] = average(image[rownum][colnum])


binary = Image.open('data_dir/images/satImage_004.png') # open colour image
binary = binary.convert('1') # convert image to black and white


#### Hough #####

from skimage.transform import (hough_line, hough_line_peaks,
                               probabilistic_hough_line)
from skimage.feature import canny


for i in range(10):
    image = grey
    edges = canny(image, sigma=i)
    lines = probabilistic_hough_line(edges, threshold=10, line_length=5,
                                     line_gap=3)

    fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(8,4), sharex=True, sharey=True)

    ax1.imshow(image, cmap=plt.cm.gray)
    ax1.set_title('Input image')
    ax1.set_axis_off()
    ax1.set_adjustable('box-forced')

    ax2.imshow(edges, cmap=plt.cm.gray)
    ax2.set_title('Canny edges'+str(i))
    ax2.set_axis_off()
    ax2.set_adjustable('box-forced')

    ax3.imshow(edges * 0)

    for line in lines:
        p0, p1 = line
        ax3.plot((p0[0], p1[0]), (p0[1], p1[1]))

    ax3.set_title('Probabilistic Hough')
    ax3.set_axis_off()
    ax3.set_adjustable('box-forced')
    plt.show()
